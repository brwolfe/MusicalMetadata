- discuss resource types. should songs be a type? tracks? are they the same type or different?
[for now we are ignoring playlists. song will be a resource type, and list of songs. views added for the new resource types.]

- add / wrangle forms to add / update each resource type.
[planning to work on this today - sed]
[update: got post working for artists, albums. tried put / update for artists but it's not working yet.]

- query forms

- address various issues with the views (see comments within individual docs)
    -All songs (from query)
    -Single song

- add handler functions within app.js
[i think we've got a working version now in yetanotherapp.js. will see as more of the views / forms come online...]

- add microdata (within all views)
[dbs is working on this.]

-make sure everything has the appropriate classes etc
["Your HTML representations must include the proper hypermedia controls for linking representations to one another, creating query URIs from templates, and updating resources both idempotently and non-idempotently. Your HTML controls must have appropriate id attribute values, class attribute values, name attribute values, and rel attribute values that describe their meaning and purpose (this was the work you did for the Designing a Hypermedia Type assignment)."]

Punt List
    -Distinguishing "recording" from "song"
        -New views and new handlers
        -Establish many-to-many relationship
    -Playlist
    
